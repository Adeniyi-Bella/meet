{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-events.js","api.js","App.js","serviceWorker.js","index.js"],"names":["Event","event","summary","location","start","htmlLink","description","useState","showDetails","setShowDetails","eventStart","moment","dateTime","toDate","className","onClick","href","target","rel","dangerouslySetInnerHTML","__html","EventList","events","map","key","id","Alert","props","getStyle","color","style","this","text","Component","InfoAlert","ErrorAlert","OfflineAlert","fontSize","CitySearch","updateEvents","locations","showSuggestions","setShowSuggestions","suggestions","setSuggestions","searchVal","setSearchVal","infoText","setInfoText","suggestionList","useRef","useEffect","length","document","addEventListener","handleClickOutside","removeEventListener","suggestion","current","contains","console","log","type","value","onChange","filter","toUpperCase","indexOf","handleInputChanged","ref","NumberOfEvents","numberOfEvents","setNumberOfEvents","debounceTimeout","mockEvents","kind","etag","status","created","updated","creator","email","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","removeQuery","window","history","pushState","pathname","newurl","protocol","host","extractLocations","extractLocatins","Set","getEvents","a","max_results","NProgress","startsWith","done","navigator","onLine","localStorage","getItem","JSON","parse","getAccessToken","token","url","axios","get","result","data","setItem","stringify","accessToken","fetch","then","res","json","catch","error","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","App","state","page","currentLocation","offlineText","offLineAlert","setState","countEventsOnADate","date","getData","currentDate","add","format","next7Days","response","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","origin","headers","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0eabb0b9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport {\n  PieChart,\n  Pie,\n  Tooltip,\n  Cell,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst Event = ({ event }) => {\n  const { summary, location, start, htmlLink, description } = event;\n  const [showDetails, setShowDetails] = useState(false);\n  const eventStart = moment(start.dateTime, \"YYYY-MM-DD HH:mm\").toDate();\n  // can no longer show the people coming count\n  /*   const event = this.props.event;\n  const data = [\n    { name: \"people coming\", value: event.yes_rsvp_count },\n    { name: \"open slots\", value: event.rsvp_limit - event.yes_rsvp_count },\n  ]; */\n  //const colors = [\"#8884d8\", \"#37c0ba\"];\n  return (\n    <div className=\"event\">\n      <div className=\"event__Overview\">\n        <h2 className=\"event__Overview--name\">{summary}</h2>\n        <p className=\"event__Overview--localDate\">{`${eventStart}`}</p>\n        {location && (\n          <p className=\"event__Overview--venue\">\n            @{summary} | {location}\n          </p>\n        )}\n        {/*         {event.rsvp_limit && (\n          <ResponsiveContainer height={150} width={250}>\n            <PieChart>\n              <Pie\n                data={data}\n                dataKey=\"value\"\n                nameKey=\"name\"\n                cx=\"50%\"\n                cy=\"50%\"\n                outerRadius={32}\n                label\n              >\n                {data.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={colors[index]} />\n                ))}\n              </Pie>\n              <Legend\n                iconSize={10}\n                iconType=\"triangle\"\n                layout=\"horizontal\"\n                verticalAlign=\"bottom\"\n                align=\"center\"\n              />\n              <Tooltip />\n            </PieChart>\n          </ResponsiveContainer>\n        )} */}\n        {/*         {!event.rsvp_limit && <p>{event.yes_rsvp_count} People coming</p>} */}\n        {showDetails && (\n          <button\n            className=\"details-btn\"\n            onClick={() => setShowDetails(!showDetails)}\n          >\n            hide details\n          </button>\n        )}\n        {!showDetails && (\n          <button\n            className=\"details-btn\"\n            onClick={() => setShowDetails(!showDetails)}\n          >\n            show details\n          </button>\n        )}\n      </div>\n      {showDetails && (\n        <div className=\"event__Details\">\n          <h3>About event:</h3>\n          <h4>\n            <a href={htmlLink} target=\"_blank\" rel=\"noopener noreferrer\">\n              See details on Google Calendar\n            </a>\n          </h4>\n          <p\n            className=\"event__Details--description\"\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Event;\n","import React from \"react\";\nimport Event from \"./Event\";\n\nconst EventList = ({ events }) => {\n  if (!events) return null;\n  return (\n    <ul className=\"EventList\">\n      {events.map((event) => (\n        <li key={event.id}>\n          <Event event={event} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default EventList;\n","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n  }\n}\n\nclass OfflineAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n    this.fontSize = '12px';\n  }\n}\n\n\nexport { InfoAlert, ErrorAlert, OfflineAlert };","import React, { useState, useEffect, useRef } from \"react\";\nimport { InfoAlert } from \"./Alert\";\n\nconst CitySearch = ({ updateEvents, locations }) => {\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [suggestions, setSuggestions] = useState(locations);\n  const [searchVal, setSearchVal] = useState(\"\");\n  const [infoText, setInfoText] = useState(\"\");\n  const suggestionList = useRef();\n\n  useEffect(() => {\n    if (searchVal.length > 0 && suggestions.length === 0) {\n      setInfoText(\n        \"We can not find the city you are looking for. Please try another city\"\n      );\n    } else {\n      setInfoText(\"\");\n    }\n  }, [suggestions, searchVal.length]);\n\n  useEffect(() => {\n    // add when mounted\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    // return function to be called when unmounted\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  const handleInputChanged = (event) => {\n    const value = event.target.value;\n    setShowSuggestions(true);\n    setSearchVal(value);\n    setSuggestions(\n      locations.filter(\n        (location) => location.toUpperCase().indexOf(value.toUpperCase()) > -1\n      )\n    );\n  };\n\n  const handleClickOutside = (event, suggestion) => {\n    if (suggestionList.current.contains(event.target)) {\n      // inside click\n      console.log(\"EVENT\", suggestion);\n      return updateEvents(suggestion);\n    }\n    return setShowSuggestions(false);\n  };\n\n  return (\n    <div className=\"CitySearch\">\n      <InfoAlert text={infoText} />\n      <h4>City Search</h4>\n      <label>\n        City:\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={searchVal}\n          onChange={(event) => handleInputChanged(event)}\n        />\n      </label>\n      <ul\n        className={\n          showSuggestions ? \"suggestions showSuggestions\" : \"display-none\"\n        }\n        ref={suggestionList}\n      >\n        {suggestions.map((suggestion) => (\n          <li\n            key={suggestion}\n            onClick={(event) => handleClickOutside(event, suggestion)}\n          >\n            {suggestion}\n          </li>\n        ))}\n        <li onClick={(event) => handleClickOutside(event, \"all\")}>\n          <b>See all cities</b>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default CitySearch;\n","import React, { useState } from \"react\";\nimport { DebounceInput } from \"react-debounce-input\";\nimport { ErrorAlert } from \"./Alert\";\n\nconst NumberOfEvents = ({ updateEvents }) => {\n  const [numberOfEvents, setNumberOfEvents] = useState(32);\n  const [infoText, setInfoText] = useState(\"\");\n\n  const handleInputChanged = (event) => {\n    const value = event.target.value;\n    updateEvents(null, value);\n    setNumberOfEvents(value);\n\n    if (value < 1) {\n      setInfoText(\"Select number from 1 to 32\");\n    } else {\n      setInfoText(\"\");\n    }\n  };\n\n  return (\n    <div className=\"numberOfEvents\">\n      <label>Number of Events: </label>\n      <DebounceInput\n        type=\"text\"\n        id=\"numberOfEvents__input\"\n        debounceTimeout={300}\n        value={numberOfEvents}\n        onChange={handleInputChanged}\n      />\n      <ErrorAlert text={infoText} />\n    </div>\n  );\n};\n\nexport default NumberOfEvents;\n","const mockEvents = [\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181159875584000\"',\n    id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200622T120000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA2MjJUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:14:30.000Z\",\n    updated: \"2020-05-27T11:45:37.792Z\",\n    summary: \"React is Fun\",\n    description:\n      \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    location: \"Berlin, Germany\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    start: {\n      dateTime: \"2020-06-22T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    end: {\n      dateTime: \"2020-06-22T15:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    originalStartTime: {\n      dateTime: \"2020-06-22T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n  },\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181161784712000\"',\n    id: \"4eahs9ghkhrvkld72hogu9ph3e_20200623T140000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA2MjNUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:17:46.000Z\",\n    updated: \"2020-05-27T12:01:32.356Z\",\n    summary: \"Learn JavaScript\",\n    description:\n      \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    location: \"London, UK\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    start: {\n      dateTime: \"2020-06-23T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    end: {\n      dateTime: \"2020-06-23T17:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\n    originalStartTime: {\n      dateTime: \"2020-06-23T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n  },\n];\nexport { mockEvents };\n","import { mockEvents } from \"./mock-events\";\nimport NProgress from \"nprogress\";\nimport axios from \"axios\";\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst extractLocations = (events) => {\n  var extractLocatins = events.map((event) => event.location);\n  var locations = [...new Set(extractLocatins)];\n  return locations;\n};\n\nconst getEvents = async (max_results = 32) => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return { events: mockEvents, locations: extractLocations(mockEvents) };\n  }\n  if (!navigator.onLine) {\n    const events = localStorage.getItem(\"lastEvents\");\n    NProgress.done();\n    return { events: JSON.parse(events), locations: extractLocations(events) };\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = `https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${token}/${max_results}`;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return { events: result.data.events, locations };\n  }\n};\n\nconst getAccessToken = async () => {\n  const accessToken = await localStorage.getItem(\"access_token\");\n  const { error } = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error);\n\n  if (error === \"invalid_token\" || !accessToken) {\n    localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n\n    if (!code) {\n      const results = await axios.get(\n        \"https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return getToken(code);\n  }\n\n  return accessToken;\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport { getEvents, getAccessToken };\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./nprogress.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { getEvents } from \"./api\";\nimport { OfflineAlert } from \"./Alert\";\nimport moment from \"moment\";\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\n\nclass App extends Component {\n  componentDidMount() {\n    getEvents().then((response) => {\n      this.setState({ events: response.events, locations: response.locations });\n    });\n    window.addEventListener(\"online\", this.offLineAlert());\n  }\n\n  state = {\n    events: [],\n    page: null,\n    currentLocation: \"all\",\n    offlineText: \"\",\n    numberOfEvents: 32,\n    locations: [],\n  };\n\n  offLineAlert = () => {\n    if (navigator.onLine === false) {\n      this.setState({\n        offlineText:\n          \"You appear to be offline, this list is cached. Please connect to the internet for an updated list.\",\n      });\n    } else {\n      this.setState({\n        offlineText: \"\",\n      });\n    }\n  };\n\n  countEventsOnADate = (date) => {\n    // This should always return 0 untill we ensure the dates are the same format\n    const count = this.state.events.filter(\n      (event) => event.start.dateTime === date\n    );\n    return count.length;\n  };\n\n  getData = () => {\n    const currentDate = moment().add(7, \"d\").format(\"YYYY-MM-DD HH:mm\"); //next 7 days\n    //{ date: dateString, number: count } format\n    const next7Days = this.state.events.filter((event) => {\n      const eventDate = moment(\n        event.start.dateTime,\n        \"YYYY-MM-DD HH:mm\"\n      ).toDate();\n\n      return eventDate <= currentDate;\n    });\n    console.log(\"next7Days\", next7Days);\n    return next7Days;\n  };\n\n  updateEvents = (location, numberOfEvents) => {\n    const { currentLocation } = this.state;\n    if (location) {\n      getEvents(this.state.numberOfEvents).then((response) =>\n        this.setState({\n          events:\n            location === \"all\"\n              ? response.events\n              : response.events.filter((event) => event.location === location),\n          currentLocation: location,\n        })\n      );\n    } else {\n      getEvents(numberOfEvents).then((response) =>\n        this.setState({\n          events:\n            currentLocation === \"all\"\n              ? response.events\n              : response.events.filter((event) => event.location === location),\n          numberOfEvents: numberOfEvents,\n        })\n      );\n    }\n  };\n\n  render() {\n    const { locations, numberOfEvents, offlineText, events } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Meet App</h1>\n        <h4>Choose your nearest city</h4>\n        <CitySearch updateEvents={this.updateEvents} locations={locations} />\n        <OfflineAlert text={offlineText} />\n        <NumberOfEvents\n          updateEvents={this.updateEvents}\n          numberOfEvents={numberOfEvents}\n        />\n        {/* <ResponsiveContainer height={400}>\n          <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\n            <CartesianGrid />\n            <XAxis type=\"category\" dataKey=\"date\" name=\"date\" />\n            <YAxis\n              allowDecimals={false}\n              type=\"number\"\n              dataKey=\"number\"\n              name=\"number of events\"\n            />\n            <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n            <Scatter name=\"A school\" data={this.getData()} fill=\"#8884d8\" />\n          </ScatterChart>\n        </ResponsiveContainer> */}\n        <EventList events={events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n//import * as atatus from 'atatus-spa';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n//atatus.config('cb1063f47ae643848aaf6f0557b612c1').install();\n"],"sourceRoot":""}