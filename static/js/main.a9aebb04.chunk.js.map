{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","api.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showDetails","this","props","event","summary","location","start","htmlLink","description","eventStart","moment","dateTime","toDate","className","onClick","setState","href","target","rel","dangerouslySetInnerHTML","__html","Component","EventList","events","map","key","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","OfflineAlert","fontSize","CitySearch","locations","query","suggestions","infoText","warningText","showSuggestions","handleInputChanged","value","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","placeholder","NumberOfEvents","numberOfEvents","debounceTimeout","extractLocations","extractLocatins","Set","getEvents","a","max_results","NProgress","getAccessToken","token","url","axios","get","result","data","localStorage","setItem","JSON","stringify","done","getItem","accessToken","fetch","catch","error","removeItem","searchParams","URLSearchParams","window","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","then","res","json","access_token","App","page","currentLocation","offlineText","countEventsOnADate","date","length","getData","currentDate","add","format","next7Days","console","log","eventCount","response","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a9aebb04.chunk.js","sourcesContent":["import React, { useState, Component } from \"react\";\nimport moment from \"moment\";\nimport {\n  PieChart,\n  Pie,\n  Tooltip,\n  Cell,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nclass Event extends Component {\n  state = {\n    showDetails: false,\n  };\n\n  // can no longer show the people coming count\n  /*   const event = this.props.event;\n  const data = [\n    { name: \"people coming\", value: event.yes_rsvp_count },\n    { name: \"open slots\", value: event.rsvp_limit - event.yes_rsvp_count },\n  ]; */\n  //const colors = [\"#8884d8\", \"#37c0ba\"];\n  render() {\n    const {\n      summary,\n      location,\n      start,\n      htmlLink,\n      description,\n    } = this.props.event;\n    const eventStart = moment(start.dateTime, \"YYYY-MM-DD HH:mm\").toDate();\n    const { showDetails } = this.state;\n    return (\n      <div className=\"event\">\n        <div className=\"event__Overview\">\n          <h2 className=\"event__Overview--name\">{summary}</h2>\n          <p className=\"event__Overview--localDate\">{`${eventStart}`}</p>\n          {location && (\n            <p className=\"event__Overview--venue\">\n              @{summary} | {location}\n            </p>\n          )}\n          {/*         {event.rsvp_limit && (\n            <ResponsiveContainer height={150} width={250}>\n              <PieChart>\n                <Pie\n                  data={data}\n                  dataKey=\"value\"\n                  nameKey=\"name\"\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius={32}\n                  label\n                >\n                  {data.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={colors[index]} />\n                  ))}\n                </Pie>\n                <Legend\n                  iconSize={10}\n                  iconType=\"triangle\"\n                  layout=\"horizontal\"\n                  verticalAlign=\"bottom\"\n                  align=\"center\"\n                />\n                <Tooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          )} */}\n          {/*         {!event.rsvp_limit && <p>{event.yes_rsvp_count} People coming</p>} */}\n          {showDetails && (\n            <button\n              className=\"details-btn\"\n              onClick={() => this.setState({ showDetails: !showDetails })}\n            >\n              hide details\n            </button>\n          )}\n          {!showDetails && (\n            <button\n              className=\"details-btn\"\n              onClick={() => this.setState({ showDetails: !showDetails })}\n            >\n              show details\n            </button>\n          )}\n        </div>\n        {showDetails && (\n          <div className=\"event__Details\">\n            <h3>About event:</h3>\n            <h4>\n              <a href={htmlLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                See details on Google Calendar\n              </a>\n            </h4>\n            <p\n              className=\"event__Details--description\"\n              dangerouslySetInnerHTML={{ __html: description }}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","import React from \"react\";\nimport Event from \"./Event\";\n\nconst EventList = ({ events }) => {\n  if (!events) return null;\n  return (\n    <ul className=\"EventList\">\n      {events.map((event) => (\n        <li key={event.id}>\n          <Event event={event} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default EventList;\n","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n  }\n}\n\nclass OfflineAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n    this.fontSize = '12px';\n  }\n}\n\n\nexport { InfoAlert, ErrorAlert, OfflineAlert };","import React, { Component } from \"react\";\nimport { InfoAlert } from \"./Alert\";\n\nclass CitySearch extends Component {\n  state = {\n    locations: this.props.locations,\n    query: \"\",\n    suggestions: [],\n    infoText: \"\",\n    warningText: \"\",\n    showSuggestions: false,\n  };\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ showSuggestions: true });\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n\n    return this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      suggestions: [],\n      showSuggestions: false,\n    });\n    this.props.updateEvents(suggestion);\n  };\n\n  render() {\n    const { showSuggestions } = this.state;\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <label>\n          <h4>City Search</h4>\n          <input\n            type=\"text\"\n            className=\"city\"\n            value={this.state.query}\n            onChange={this.handleInputChanged}\n            placeholder=\"Search for a city\"\n          />\n        </label>\n\n        <ul\n          className={\n            showSuggestions ? \"suggestions showSuggestions\" : \"display-none\"\n          }\n        >\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","import React, { Component } from \"react\";\nimport { DebounceInput } from \"react-debounce-input\";\nimport { ErrorAlert } from \"./Alert\";\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.props.updateEvents(null, value);\n    this.setState({ numberOfEvents: value });\n\n    if (value < 1) {\n      this.setState({\n        infoText: \"Select number from 1 to 32\",\n      });\n    } else {\n      this.setState({\n        infoText: \"\",\n      });\n    }\n  };\n\n  render() {\n    const { numberOfEvents } = this.state;\n    return (\n      <div className=\"numberOfEvents\">\n        <label>Number of Events: </label>\n        <DebounceInput\n          type=\"text\"\n          id=\"numberOfEvents__input\"\n          debounceTimeout={300}\n          value={numberOfEvents}\n          onChange={this.handleInputChanged}\n        />\n        <ErrorAlert text={this.state.infoText} />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","import { mockEvents } from \"./mock-events\";\nimport NProgress from \"nprogress\";\nimport axios from \"axios\";\n\nconst removeQuery = () => {\n  return null;\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst extractLocations = (events) => {\n  var extractLocatins = events.map((event) => event.location);\n  var locations = [...new Set(extractLocatins)];\n  return locations;\n};\n\nconst getEvents = async (max_results = 32) => {\n  NProgress.start();\n  /* \n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return { events: mockEvents, locations: extractLocations(mockEvents) };\n  }\n   if (!navigator.onLine) {\n    const events = localStorage.getItem(\"lastEvents\");\n    NProgress.done();\n    return { events: JSON.parse(events), locations: extractLocations(events) };\n  }\n */\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = `https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${token}/${max_results}`;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return { events: result.data.events, locations };\n  }\n};\n\nconst getAccessToken = async () => {\n  const accessToken = await localStorage.getItem(\"access_token\");\n  const { error } = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  ).catch((error) => error);\n\n  if (error === \"invalid_token\" || !accessToken) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport { getEvents, getAccessToken, extractLocations };\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./nprogress.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { getEvents } from \"./api\";\nimport { OfflineAlert } from \"./Alert\";\nimport moment from \"moment\";\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\n\nclass App extends Component {\n  componentDidMount() {\n    getEvents().then((response) => {\n      this.setState({ events: response.events, locations: response.locations });\n    });\n    //window.addEventListener(\"online\", this.offLineAlert());\n  }\n\n  state = {\n    events: [],\n    page: null,\n    currentLocation: \"all\",\n    offlineText: \"\",\n    numberOfEvents: 32,\n    locations: [],\n  };\n\n  /*   offLineAlert = () => {\n    if (navigator.onLine === false) {\n      this.setState({\n        offlineText:\n          \"You appear to be offline, this list is cached. Please connect to the internet for an updated list.\",\n      });\n    } else {\n      this.setState({\n        offlineText: \"\",\n      });\n    }\n  };\n */\n  countEventsOnADate = (date) => {\n    // This should always return 0 untill we ensure the dates are the same format\n    const count = this.state.events.filter(\n      (event) => event.start.dateTime === date\n    );\n    return count.length;\n  };\n\n  getData = () => {\n    const currentDate = moment().add(7, \"d\").format(\"YYYY-MM-DD HH:mm\"); //next 7 days\n    //{ date: dateString, number: count } format\n    const next7Days = this.state.events.filter((event) => {\n      const eventDate = moment(\n        event.start.dateTime,\n        \"YYYY-MM-DD HH:mm\"\n      ).toDate();\n\n      return eventDate <= currentDate;\n    });\n    console.log(\"next7Days\", next7Days);\n    return next7Days;\n  };\n\n  updateEvents = (location, eventCount) => {\n    const { currentLocation, numberOfEvents } = this.state;\n    if (location) {\n      getEvents(numberOfEvents).then((response) =>\n        this.setState({\n          events:\n            location === \"all\"\n              ? response.events\n              : response.events.filter((event) => event.location === location),\n          currentLocation: location,\n        })\n      );\n    } else {\n      getEvents(eventCount).then((response) => {\n        return this.setState({\n          events:\n            currentLocation === \"all\"\n              ? response.events\n              : response.events.filter(\n                  (event) => event.location === currentLocation\n                ),\n          numberOfEvents: eventCount,\n        });\n      });\n    }\n  };\n\n  render() {\n    const { locations, numberOfEvents, offlineText, events } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Meet App</h1>\n        <h4>Choose your nearest city</h4>\n        <CitySearch updateEvents={this.updateEvents} locations={locations} />\n        <OfflineAlert text={offlineText} />\n        <NumberOfEvents\n          updateEvents={this.updateEvents}\n          numberOfEvents={numberOfEvents}\n        />\n        {/* <ResponsiveContainer height={400}>\n          <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\n            <CartesianGrid />\n            <XAxis type=\"category\" dataKey=\"date\" name=\"date\" />\n            <YAxis\n              allowDecimals={false}\n              type=\"number\"\n              dataKey=\"number\"\n              name=\"number of events\"\n            />\n            <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n            <Scatter name=\"A school\" data={this.getData()} fill=\"#8884d8\" />\n          </ScatterChart>\n        </ResponsiveContainer> */}\n        <EventList events={events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n//import * as atatus from 'atatus-spa';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n//atatus.config('cb1063f47ae643848aaf6f0557b612c1').install();\n"],"sourceRoot":""}