{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","api.js","App.js","serviceWorker.js","index.js"],"names":["Event","event","summary","location","start","htmlLink","end","description","useState","showDetails","setShowDetails","eventStart","moment","dateTime","toDate","className","onClick","href","target","rel","dangerouslySetInnerHTML","__html","EventList","events","map","key","id","Alert","props","getStyle","color","style","this","text","Component","InfoAlert","ErrorAlert","OfflineAlert","fontSize","CitySearch","state","query","suggestions","infoText","warningText","handleInputChanged","value","setState","handleItemClicked","lat","lon","updateEvents","type","onChange","placeholder","defaultCity","item","name_string","NumberOfEvents","numberOfEvents","getEvents","a","max_results","console","log","getAccessToken","token","url","axios","get","result","data","localStorage","setItem","JSON","stringify","getItem","accessToken","fetch","then","res","json","error","searchParams","URLSearchParams","window","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","App","page","offlineText","offLineAlert","navigator","onLine","countEventsOnADate","date","filter","length","getData","currentDate","add","format","next7Days","response","addEventListener","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.75d1f728.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport {\n  PieChart,\n  Pie,\n  Tooltip,\n  Cell,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst Event = ({ event }) => {\n  const { summary, location, start, end, htmlLink, description } = event;\n  const [showDetails, setShowDetails] = useState(false);\n  const eventStart = moment(start.dateTime, \"YYYY-MM-DD HH:mm\").toDate();\n  // can no longer show the people coming count\n  /*   const event = this.props.event;\n  const data = [\n    { name: \"people coming\", value: event.yes_rsvp_count },\n    { name: \"open slots\", value: event.rsvp_limit - event.yes_rsvp_count },\n  ]; */\n  //const colors = [\"#8884d8\", \"#37c0ba\"];\n  return (\n    <div className=\"event\">\n      <div className=\"event__Overview\">\n        <h2 className=\"event__Overview--name\">{summary}</h2>\n        <p className=\"event__Overview--localDate\">{`${eventStart}`}</p>\n        {location && (\n          <p className=\"event__Overview--venue\">\n            @{summary} | {location}\n          </p>\n        )}\n        {/*         {event.rsvp_limit && (\n          <ResponsiveContainer height={150} width={250}>\n            <PieChart>\n              <Pie\n                data={data}\n                dataKey=\"value\"\n                nameKey=\"name\"\n                cx=\"50%\"\n                cy=\"50%\"\n                outerRadius={32}\n                label\n              >\n                {data.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={colors[index]} />\n                ))}\n              </Pie>\n              <Legend\n                iconSize={10}\n                iconType=\"triangle\"\n                layout=\"horizontal\"\n                verticalAlign=\"bottom\"\n                align=\"center\"\n              />\n              <Tooltip />\n            </PieChart>\n          </ResponsiveContainer>\n        )} */}\n        {/*         {!event.rsvp_limit && <p>{event.yes_rsvp_count} People coming</p>} */}\n        {showDetails && (\n          <button\n            className=\"details-btn\"\n            onClick={() => setShowDetails(!showDetails)}\n          >\n            hide details\n          </button>\n        )}\n        {!showDetails && (\n          <button\n            className=\"details-btn\"\n            onClick={() => setShowDetails(!showDetails)}\n          >\n            show details\n          </button>\n        )}\n      </div>\n      {showDetails && (\n        <div className=\"event__Details\">\n          <h3>About event:</h3>\n          <h4>\n            <a href={htmlLink} target=\"_blank\" rel=\"noopener noreferrer\">\n              See details on Google Calendar\n            </a>\n          </h4>\n          <p\n            className=\"event__Details--description\"\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Event;\n","import React from \"react\";\nimport Event from \"./Event\";\n\nconst EventList = ({ events }) => {\n  if (!events) return null;\n  return (\n    <ul className=\"EventList\">\n      {events.map((event) => (\n        <li key={event.id}>\n          <Event event={event} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default EventList;\n","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n  }\n}\n\nclass OfflineAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n    this.fontSize = '12px';\n  }\n}\n\n\nexport { InfoAlert, ErrorAlert, OfflineAlert };","import React, { Component } from \"react\";\n//import { getSuggestions } from './api';\nimport { InfoAlert } from \"./Alert\";\n\nclass CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: [],\n    infoText: \"\",\n    warningText: \"\",\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ query: value });\n\n    /*     getSuggestions(value).then((suggestions) => {\n      this.setState({ suggestions });\n\n      if (value && suggestions.length === 0) {\n        this.setState({\n          infoText:\n            \"We can not find the city you are looking for. Please try another city\",\n        });\n      } else {\n        this.setState({\n          infoText: \"\",\n        });\n      }\n    }); */\n  };\n\n  handleItemClicked = (value, lat, lon) => {\n    this.setState({ query: value, suggestions: [] });\n    this.props.updateEvents(lat, lon);\n  };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <label>\n          City:\n          <input\n            type=\"text\"\n            className=\"city\"\n            value={this.state.query}\n            onChange={this.handleInputChanged}\n            placeholder={this.props.defaultCity}\n          />\n        </label>\n\n        <ul className=\"suggestions\">\n          {this.state.suggestions.map((item) => (\n            <li\n              key={item.name_string}\n              onClick={() =>\n                this.handleItemClicked(item.name_string, item.lat, item.lon)\n              }\n            >\n              {item.name_string}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","import React, { Component } from \"react\";\nimport { ErrorAlert } from \"./Alert\";\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 5,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.props.updateEvents(null, value);\n    this.setState({ numberOfEvents: value });\n\n    if (value < 1) {\n      this.setState({\n        infoText: \"Select number from 1 to 32\",\n      });\n    } else {\n      this.setState({\n        infoText: \"\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"numberOfEvents\">\n        <label>Number of Events: </label>\n        <input\n          type=\"text\"\n          id=\"numberOfEvents__input\"\n          value={this.state.numberOfEvents}\n          onChange={this.handleInputChanged}\n        />\n        <ErrorAlert text={this.state.infoText} />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","import { mockEvents } from \"./mock-events\";\nimport axios from \"axios\";\n\n/* async function getSuggestions(query) {\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    return [\n      {\n        kind: \"calendar#event\",\n        etag: 3181161784712000,\n        id: \"4eahs9ghkhrvkld72hogu9ph3e_20200625T140000Z\",\n        status: \"confirmed\",\n        htmlLink:\n          \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA2MjVUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        created: \"2020-05-19T19:17:46.000Z\",\n        updated: \"2020-05-27T12:01:32.356Z\",\n        summary: \"Learn JavaScript\",\n        description:\n          \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) nnJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        location: \"London, UK\",\n        creator: { email: \"fullstackwebdev@careerfoundry.com\", self: true },\n        organizer: {\n          email: \"fullstackwebdev@careerfoundry.com\",\n          self: true,\n        },\n        start: {\n          dateTime: \"2020-06-25T16:00:00+02:00\",\n          timeZone: \"Europe/Berlin\",\n        },\n        end: {\n          dateTime: \"2020-06-25T17:00:00+02:00\",\n          timeZone: \"Europe/Berlin\",\n        },\n        recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\n        originalStartTime: {\n          dateTime: \"2020-06-25T16:00:00+02:00\",\n          timeZone: \"Europe/Berlin\",\n        },\n        iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        sequence: 0,\n        reminders: { useDefault: true },\n      },\n      {\n        kind: \"calendar#event\",\n        etag: 3181159875584000,\n        id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200626T120000Z\",\n        status: \"confirmed\",\n        htmlLink:\n          \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA2MjZUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        created: \"2020-05-19T19:14:30.000Z\",\n        updated: \"2020-05-27T11:45:37.792Z\",\n        summary: \"React is Fun\",\n        description:\n          \"Love HTML, CSS, and JS? Want to become a cool front-end developer? nnReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. nnJoin us in our free React training sessions and give your career a new direction. \",\n        location: \"Berlin, Germany\",\n        creator: { email: \"fullstackwebdev@careerfoundry.com\", self: true },\n        organizer: {\n          email: \"fullstackwebdev@careerfoundry.com\",\n          self: true,\n        },\n        start: {\n          dateTime: \"2020-06-26T14:00:00+02:00\",\n          timeZone: \"Europe/Berlin\",\n        },\n        end: {\n          dateTime: \"2020-06-26T15:00:00+02:00\",\n          timeZone: \"Europe/Berlin\",\n        },\n        recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        originalStartTime: {\n          dateTime: \"2020-06-26T14:00:00+02:00\",\n          timeZone: \"Europe/Berlin\",\n        },\n        iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        sequence: 0,\n        reminders: { useDefault: true },\n      },\n    ];\n  }\n\n  const token = await getAccessToken();\n  if (token) {\n    return getEvents(32);\n  }\n  return [];\n} */\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getEvents = async (max_results = 5) => {\n  console.log(max_results);\n  /*   if (window.location.href.startsWith(\"http://localhost\")) {\n    return mockEvents;\n  }\n  if (!navigator.onLine) {\n    const events = localStorage.getItem(\"lastEvents\");\n    return JSON.parse(events);\n  } */\n  const token = await getAccessToken();\n\n  if (token) {\n    //removeQuery();\n    const url = `https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${token}/${max_results}`;\n    const result = await axios.get(url);\n    const { events } = result.data;\n    if (result.data) {\n      localStorage.setItem(\"lastEvents\", JSON.stringify(events));\n    }\n    return events;\n  }\n};\n\nconst getAccessToken = async () => {\n  const accessToken = await localStorage.getItem(\"access_token\");\n  const { error } = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  ).then((res) => res.json());\n\n  if (error === \"invalid_token\" || !accessToken) {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n\n    if (!code) {\n      const results = await axios.get(\n        \"https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return getToken(code);\n  }\n\n  return accessToken;\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/token/${encodeCode}`\n  ).then((res) => {\n    return res.json();\n  });\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport { getEvents, getAccessToken };\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { getEvents } from \"./api\";\nimport { OfflineAlert } from \"./Alert\";\nimport moment from \"moment\";\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\n\n/* const App = () => {\n  const [events, setEvents] = useState(undefined);\n  const token = getAccessToken();\n\n  useEffect(() => {\n    getEvents().then((response) => this.setState({ events: response.events }));\n    window.addEventListener(\"online\", this.offLineAlert());\n    return () => {\n      window.removeEventListener(\"online\", this.offLineAlert());\n    };\n  }, []);\n\n  useEffect(() => {\n    getEvents().then((response) => this.setState({ events: response.events }));\n  }, [token]);\n};\n */\nclass App extends Component {\n  componentDidMount() {\n    getEvents().then((response) => this.setState({ events: response.events }));\n    window.addEventListener(\"online\", this.offLineAlert());\n  }\n\n  state = {\n    events: [],\n    page: null,\n    defaultCity: \"\",\n    offlineText: \"\",\n    numberOfEvents: 5,\n  };\n\n  offLineAlert = () => {\n    if (navigator.onLine === false) {\n      this.setState({\n        offlineText:\n          \"You appear to be offline, this list is cached. Please connect to the internet for an updated list.\",\n      });\n    } else {\n      this.setState({\n        offlineText: \"\",\n      });\n    }\n  };\n\n  countEventsOnADate = (date) => {\n    // This should always return 0 untill we ensure the dates are the same format\n    const count = this.state.events.filter(\n      (event) => event.start.dateTime === date\n    );\n    return count.length;\n  };\n\n  getData = () => {\n    const currentDate = moment().add(7, \"d\").format(\"YYYY-MM-DD HH:mm\"); //next 7 days\n    //{ date: dateString, number: count } format\n    const next7Days = this.state.events.filter((event) => {\n      const eventDate = moment(\n        event.start.dateTime,\n        \"YYYY-MM-DD HH:mm\"\n      ).toDate();\n\n      return eventDate <= currentDate;\n    });\n    console.log(\"next7Days\", next7Days);\n    return next7Days;\n  };\n\n  updateEvents = (location, numberOfEvents) => {\n    if (location) {\n      getEvents(numberOfEvents).then((response) =>\n        this.setState({\n          events: response.events.filter(\n            (event) => event.location === location\n          ),\n        })\n      );\n    } else {\n      getEvents(numberOfEvents).then((response) =>\n        this.setState({\n          events: response.events,\n          numberOfEvents: numberOfEvents,\n        })\n      );\n    }\n  };\n\n  render() {\n    console.log(\"STATE#############\", this.state.events);\n    return (\n      <div className=\"App\">\n        <CitySearch\n          updateEvents={this.updateEvents}\n          defaultCity={this.state.defaultCity}\n        />\n        <OfflineAlert text={this.state.offlineText} />\n        <NumberOfEvents updateEvents={this.updateEvents} numberOfEvents={2} />\n        {/* <ResponsiveContainer height={400}>\n          <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\n            <CartesianGrid />\n            <XAxis type=\"category\" dataKey=\"date\" name=\"date\" />\n            <YAxis\n              allowDecimals={false}\n              type=\"number\"\n              dataKey=\"number\"\n              name=\"number of events\"\n            />\n            <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n            <Scatter name=\"A school\" data={this.getData()} fill=\"#8884d8\" />\n          </ScatterChart>\n        </ResponsiveContainer> */}\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n//import * as atatus from 'atatus-spa';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n//atatus.config('cb1063f47ae643848aaf6f0557b612c1').install();\n"],"sourceRoot":""}