{"version":3,"sources":["Event.js","EventList.js","api.js","Alert.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","event","summary","location","start","htmlLink","end","description","useState","showDetails","setShowDetails","eventStart","moment","dateTime","toDate","console","log","className","onClick","href","target","rel","dangerouslySetInnerHTML","__html","EventList","this","props","events","map","key","id","Component","getSuggestions","query","a","getAccessToken","getEvents","max_results","navigator","onLine","localStorage","getItem","JSON","parse","token","url","axios","get","result","data","setItem","stringify","accessToken","searchParams","URLSearchParams","window","search","code","fetch","then","res","json","authUrl","getToken","lastSavedTime","Date","now","access_token","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","OfflineAlert","fontSize","CitySearch","state","suggestions","infoText","warningText","handleInputChanged","value","setState","length","handleItemClicked","lat","lon","updateEvents","type","onChange","placeholder","defaultCity","item","name_string","NumberOfEvents","numberOfEvents","App","page","offlineText","offLineAlert","countEventsOnADate","date","filter","getData","currentDate","add","format","next7Days","response","addEventListener","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e043490a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport {\n  PieChart,\n  Pie,\n  Tooltip,\n  Cell,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst Event = ({ event }) => {\n  const { summary, location, start, end, htmlLink, description } = event;\n  const [showDetails, setShowDetails] = useState(false);\n  const eventStart = moment(start.dateTime, \"YYYY-MM-DD HH:mm\").toDate();\n  // can no longer show the people coming count\n  /*   const event = this.props.event;\n  const data = [\n    { name: \"people coming\", value: event.yes_rsvp_count },\n    { name: \"open slots\", value: event.rsvp_limit - event.yes_rsvp_count },\n  ]; */\n  //const colors = [\"#8884d8\", \"#37c0ba\"];\n  console.log(\"eventStart\", eventStart);\n  return (\n    <div className=\"event\">\n      <div className=\"event__Overview\">\n        <h2 className=\"event__Overview--name\">{summary}</h2>\n        <p className=\"event__Overview--localDate\">{`${eventStart}`}</p>\n        {location && (\n          <p className=\"event__Overview--venue\">\n            @{summary} | {location}\n          </p>\n        )}\n        {/*         {event.rsvp_limit && (\n          <ResponsiveContainer height={150} width={250}>\n            <PieChart>\n              <Pie\n                data={data}\n                dataKey=\"value\"\n                nameKey=\"name\"\n                cx=\"50%\"\n                cy=\"50%\"\n                outerRadius={32}\n                label\n              >\n                {data.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={colors[index]} />\n                ))}\n              </Pie>\n              <Legend\n                iconSize={10}\n                iconType=\"triangle\"\n                layout=\"horizontal\"\n                verticalAlign=\"bottom\"\n                align=\"center\"\n              />\n              <Tooltip />\n            </PieChart>\n          </ResponsiveContainer>\n        )} */}\n        {/*         {!event.rsvp_limit && <p>{event.yes_rsvp_count} People coming</p>} */}\n        {showDetails && (\n          <button\n            className=\"details-btn\"\n            onClick={() => setShowDetails(!showDetails)}\n          >\n            hide details\n          </button>\n        )}\n        {!showDetails && (\n          <button\n            className=\"details-btn\"\n            onClick={() => setShowDetails(!showDetails)}\n          >\n            show details\n          </button>\n        )}\n      </div>\n      {showDetails && (\n        <div className=\"event__Details\">\n          <h3>About event:</h3>\n          <h4>\n            <a href={htmlLink} target=\"_blank\" rel=\"noopener noreferrer\">\n              See details on Google Calendar\n            </a>\n          </h4>\n          <p\n            className=\"event__Details--description\"\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Event;\n","import React, { Component } from \"react\";\nimport Event from \"./Event\";\n\nclass EventList extends Component {\n  render() {\n    console.log(this.props);\n    return (\n      <ul className=\"EventList\">\n        {this.props.events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;\n","import { mockEvents } from \"./mock-events\";\nimport axios from \"axios\";\n\nasync function getSuggestions(query) {\n  /*  if (window.location.href.startsWith(\"http://localhost\")) {\n    return {\n      events: [\n        {\n          kind: \"calendar#event\",\n          etag: 3181161784712000,\n          id: \"4eahs9ghkhrvkld72hogu9ph3e_20200625T140000Z\",\n          status: \"confirmed\",\n          htmlLink:\n            \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA2MjVUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n          created: \"2020-05-19T19:17:46.000Z\",\n          updated: \"2020-05-27T12:01:32.356Z\",\n          summary: \"Learn JavaScript\",\n          description:\n            \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) nnJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n          location: \"London, UK\",\n          creator: { email: \"fullstackwebdev@careerfoundry.com\", self: true },\n          organizer: {\n            email: \"fullstackwebdev@careerfoundry.com\",\n            self: true,\n          },\n          start: {\n            dateTime: \"2020-06-25T16:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n          },\n          end: {\n            dateTime: \"2020-06-25T17:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n          },\n          recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\n          originalStartTime: {\n            dateTime: \"2020-06-25T16:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n          },\n          iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n          sequence: 0,\n          reminders: { useDefault: true },\n        },\n        {\n          kind: \"calendar#event\",\n          etag: 3181159875584000,\n          id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200626T120000Z\",\n          status: \"confirmed\",\n          htmlLink:\n            \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA2MjZUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n          created: \"2020-05-19T19:14:30.000Z\",\n          updated: \"2020-05-27T11:45:37.792Z\",\n          summary: \"React is Fun\",\n          description:\n            \"Love HTML, CSS, and JS? Want to become a cool front-end developer? nnReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. nnJoin us in our free React training sessions and give your career a new direction. \",\n          location: \"Berlin, Germany\",\n          creator: { email: \"fullstackwebdev@careerfoundry.com\", self: true },\n          organizer: {\n            email: \"fullstackwebdev@careerfoundry.com\",\n            self: true,\n          },\n          start: {\n            dateTime: \"2020-06-26T14:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n          },\n          end: {\n            dateTime: \"2020-06-26T15:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n          },\n          recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n          originalStartTime: {\n            dateTime: \"2020-06-26T14:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n          },\n          iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n          sequence: 0,\n          reminders: { useDefault: true },\n        },\n      ],\n    };\n  } */\n\n  /**\n   *   GET - https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\n  GET - https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/token/{code}\n  GET - https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/get-events/{access_token}/{max_results}\n   */\n\n  const token = await getAccessToken();\n  if (token) {\n    getEvents(32);\n  }\n  return [];\n}\n\nasync function getEvents(max_results = 1) {\n  /*   if (window.location.href.startsWith(\"http://localhost\")) {\n    return mockEvents;\n  } */\n  if (!navigator.onLine) {\n    const events = localStorage.getItem(\"lastEvents\");\n    return JSON.parse(events);\n  }\n  const token = await getAccessToken();\n  if (token) {\n    const url = `https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${token}/${max_results}`;\n\n    const result = await axios.get(url);\n    const { events } = result.data;\n    if (result.data) {\n      localStorage.setItem(\"lastEvents\", JSON.stringify(events));\n    }\n    return events;\n  }\n}\n\nconst getAccessToken = async () => {\n  const accessToken = localStorage.getItem(\"access_token\");\n\n  if (!accessToken) {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    console.log();\n\n    if (!code) {\n      await fetch(\n        \"https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n      )\n        .then((res) => {\n          return res.json();\n        })\n        .then(({ authUrl }) => {\n          return authUrl ? (window.location.href = `${authUrl}`) : \"\";\n        });\n      return null;\n    }\n    return getToken(code);\n  }\n\n  const lastSavedTime = localStorage.getItem(\"last_saved_time\");\n\n  if (accessToken && Date.now() - lastSavedTime < 3600000) {\n    return accessToken;\n  }\n};\n\nconst getToken = async (code) => {\n  const { access_token } = await fetch(\n    `https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/token/${code}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .then((res) => {\n      return res;\n    });\n  localStorage.setItem(\"access_token\", access_token);\n  localStorage.setItem(\"last_saved_time\", Date.now());\n\n  return access_token;\n};\n\nexport { getSuggestions, getEvents, getAccessToken };\n","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n  }\n}\n\nclass OfflineAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n    this.fontSize = '12px';\n  }\n}\n\n\nexport { InfoAlert, ErrorAlert, OfflineAlert };","import React, { Component } from 'react';\nimport { getSuggestions } from './api';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    infoText: '',\n    warningText: ''\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ query: value });\n\n    getSuggestions(value).then(suggestions => {\n      this.setState({ suggestions });\n\n      if (value && suggestions.length === 0) {\n        this.setState({\n          infoText: 'We can not find the city you are looking for. Please try another city',\n        });\n      } else {\n        this.setState({\n          infoText: '',\n        });\n      }\n    });\n  }\n\n  handleItemClicked = (value, lat, lon) => {\n    this.setState({ query: value, suggestions: [] });\n    this.props.updateEvents(lat, lon);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <label>City:\n        <input\n            type=\"text\"\n            className=\"city\"\n            value={this.state.query}\n            onChange={this.handleInputChanged}\n            placeholder={this.props.defaultCity}\n          />\n        </label>\n\n        <ul className=\"suggestions\">\n          {this.state.suggestions.map(item =>\n            <li key={item.name_string} onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}>\n              {item.name_string}\n            </li>\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n\n  state = {\n    numberOfEvents: 32\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.props.updateEvents(null, null, value);\n    this.setState({ numberOfEvents: value });\n\n    if (value < 1) {\n      this.setState({\n        infoText: 'Select number from 1 to 32'\n      });\n    } else {\n      this.setState({\n        infoText: '',\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"numberOfEvents\">\n        <label>Number of Events: </label>\n        <input\n          type=\"text\"\n          id=\"numberOfEvents__input\"\n          value={this.state.numberOfEvents}\n          onChange={this.handleInputChanged}\n        />\n        <ErrorAlert text={this.state.infoText} />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","import React, { Component, useEffect } from \"react\";\nimport \"./App.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { getEvents } from \"./api\";\nimport { OfflineAlert } from \"./Alert\";\nimport moment from \"moment\";\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\n\n/* const App = () => {\n  const [events, setEvents] = useState(undefined);\n  useEffect(() => {\n    getEvents().then((response) => this.setState({ events: response.events }));\n    window.addEventListener(\"online\", this.offLineAlert());\n    return () => {\n      window.removeEventListener(\"online\", this.offLineAlert());\n    };\n  }, []);\n}; */\n\nclass App extends Component {\n  componentDidMount() {\n    getEvents().then((response) => this.setState({ events: response.events }));\n    window.addEventListener(\"online\", this.offLineAlert());\n  }\n\n  state = {\n    events: [],\n    page: null,\n    defaultCity: \"\",\n    offlineText: \"\",\n  };\n\n  offLineAlert = () => {\n    if (navigator.onLine === false) {\n      this.setState({\n        offlineText:\n          \"You appear to be offline, this list is cached. Please connect to the internet for an updated list.\",\n      });\n    } else {\n      this.setState({\n        offlineText: \"\",\n      });\n    }\n  };\n\n  countEventsOnADate = (date) => {\n    // This should always return 0 untill we ensure the dates are the same format\n    const count = this.state.events.filter(\n      (event) => event.start.dateTime === date\n    );\n    return count.length;\n  };\n\n  getData = () => {\n    const currentDate = moment().add(7, \"d\").format(\"YYYY-MM-DD HH:mm\"); //next 7 days\n    //{ date: dateString, number: count } format\n    const next7Days = this.state.events.filter((event) => {\n      const eventDate = moment(\n        event.start.dateTime,\n        \"YYYY-MM-DD HH:mm\"\n      ).toDate();\n\n      return eventDate <= currentDate;\n    });\n    console.log(\"next7Days\", next7Days);\n    return next7Days;\n  };\n\n  updateEvents = (location, page) => {\n    if (location) {\n      getEvents(this.state.page).then((response) =>\n        this.setState({\n          events: response.events.filter(\n            (event) => event.location === location\n          ),\n        })\n      );\n    } /* else if (page) {\n      //unsure of page relevence\n      getEvents(this.state.lat, this.state.lon, page).then((response) =>\n        this.setState({ events: response.events, page: page })\n      );\n    } */ else {\n      getEvents(\n        this.state.lat,\n        this.state.lon,\n        this.state.page\n      ).then((response) => this.setState({ events: response.events }));\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch\n          updateEvents={this.updateEvents}\n          defaultCity={this.state.defaultCity}\n        />\n        <OfflineAlert text={this.state.offlineText} />\n        <NumberOfEvents\n          updateEvents={this.updateEvents}\n          numberOfEvents={this.state.events.length}\n          lat={this.state.lat}\n          lon={this.state.lon}\n        />\n        {/* <ResponsiveContainer height={400}>\n          <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\n            <CartesianGrid />\n            <XAxis type=\"category\" dataKey=\"date\" name=\"date\" />\n            <YAxis\n              allowDecimals={false}\n              type=\"number\"\n              dataKey=\"number\"\n              name=\"number of events\"\n            />\n            <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n            <Scatter name=\"A school\" data={this.getData()} fill=\"#8884d8\" />\n          </ScatterChart>\n        </ResponsiveContainer> */}\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n//import * as atatus from 'atatus-spa';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n//atatus.config('cb1063f47ae643848aaf6f0557b612c1').install();\n"],"sourceRoot":""}